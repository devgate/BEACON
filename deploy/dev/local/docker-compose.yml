version: '3.8'

services:
  frontend:
    build:
      context: ../../../frontend/
      dockerfile: Dockerfile
    container_name: beacon-frontend-local
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:5000/api
      - CHOKIDAR_USEPOLLING=true
      - BACKEND_HOST=backend
      - BACKEND_PORT=5000
      - BACKEND_PROTOCOL=http
    volumes:
      - ../../../frontend:/app
      - /app/node_modules
    networks:
      - beacon-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ../../../backend/
      dockerfile: Dockerfile
    container_name: beacon-backend-local
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - BEDROCK_REGION=${BEDROCK_REGION:-ap-northeast-2}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${BEDROCK_REGION:-ap-northeast-2}
      - DYNAMODB_VECTORS_TABLE=${DYNAMODB_VECTORS_TABLE:-dev-beacon-vectors}
      - DYNAMODB_SESSIONS_TABLE=${DYNAMODB_SESSIONS_TABLE:-dev-beacon-sessions}
      - DYNAMODB_USAGE_TABLE=${DYNAMODB_USAGE_TABLE:-dev-beacon-usage}
    volumes:
      - ../../../backend:/app
      - ../../../backend/uploads:/app/uploads
      - ../../../backend/static:/app/static
    networks:
      - beacon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/bedrock/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy for production-like setup
  nginx:
    image: nginx:alpine
    container_name: beacon-nginx-local
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - beacon-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - with-nginx

networks:
  beacon-network:
    driver: bridge